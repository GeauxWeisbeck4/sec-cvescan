#!/bin/bash

usage() {
	cat <<-EOF
		Usage $0 [ -a ] [ -c CVE-identifier ] [ -r ] [ -v ]
		         -a show all CVEs impacting this system
		            Default is to only show CVEs impacting this system if there is 
		            an update that fixes them.
		         -c <cve-identifier> 
		            Report if this system is vulnerable to a specific CVE
		            This enables -a to search all CVEs
		         -s enable script/silent mode
		            To be used with -c CVE-1984-54321, do not print output
		            exit 0 if not vulnerable, exit 1 if vulnerable
		         -n enable nagios mode
		            Typical nagios-style "OK|WARNING|CRITICAL|UNKNOWN" messages with 0-3 exit codes
		            0/OK = not vulnerable to any CVEs
		            1/WARNING = vulnerable to CVEs for which there is no avaialble fix
		            2/CRITICAL = vunerable to CVEs that have fixes avaialble in updated packages
		            3/UNKNOWN = something went wrong with the script, or the scan
		         -r remove zip, oval, xml, and htm files to force redownload/regeneration
		            Default is use them if they already exist and are less than 1 day old
		         -v enable verbose messages
		            Default is just to print a list of CVEs
	EOF
	exit 3
}

RELEASE=$(lsb_release -c -s)
OVAL_FILE=com.ubuntu.${RELEASE}.cve.oval.xml
OVAL_ZIP=${OVAL_FILE}.bz2
OVAL_BASE_URL='https://people.canonical.com/~ubuntu-security/oval'
RESULTS=results.xml
REPORT=report.htm
LOG=oval.log
VERBOSE=false
REMOVE=false
SILENT=false
NAGIOS=false
ALL=false
NOW=$(date +%s)
EXPIRE=86400
ALL_XSL_OPTS='--stringparam showAll true'

while getopts ":ac:rsnv" op ; do
	case "${op}" in
		a)
			ALL=true
			;;
		c)
			CVE=${OPTARG}
			;;
		r)
			REMOVE=true
			;;
		s)
			SILENT=true
			;;
		n)
			NAGIOS=true
			;;
		v)
			VERBOSE=true
			;;
		*)
			usage
			;;
	esac
done
shift $((OPTIND-1))

$VERBOSE && $REMOVE && echo "Removing files: $OVAL_FILE $OVAL_ZIP $REPORT $RESULTS $LOG"
$REMOVE && rm -f $OVAL_FILE $OVAL_ZIP $REPORT $RESULTS $LOG

if [[ ! -f $OVAL_FILE || $(($NOW - $(stat -c %Y $OVAL_FILE))) -gt $EXPIRE ]] ; then
	$VERBOSE && echo "Downloading ${OVAL_BASE_URL}/${OVAL_ZIP}"
	wget -q ${OVAL_BASE_URL}/${OVAL_ZIP}
	$VERBOSE && echo "Unzipping ${OVAL_ZIP}"
	bunzip2 -f $OVAL_ZIP
fi

if [[ ! -f $RESULTS || $(($NOW - $(stat -c %Y $RESULTS))) -gt $EXPIRE ]] ; then
	$VERBOSE && echo "Running oval scan (output logged to $LOG)"
	oscap oval eval --results $RESULTS $OVAL_FILE >$LOG >&1
fi

if [[ ! -f $REPORT ||$(($NOW - $(stat -c %Y $REPORT))) -gt $EXPIRE  ]] ; then
	$VERBOSE && echo "Generating oval report from scan results (output logged to $LOG)"
	oscap oval generate report --output $REPORT $RESULTS >>$LOG >&1
fi

$VERBOSE && echo "Running xsltproc to generate CVE list of ALL CVEs"
CVE_LIST_ALL=$(xsltproc ${ALL_XSL_OPTS} text.xsl $RESULTS | sed /^$/d)
CVE_COUNT_ALL=$(wc -l <<<$CVE_LIST_ALL)
$VERBOSE && echo "$CVE_COUNT_ALL vulnerabilities found:"
## $VERBOSE && echo $CVE_LIST_ALL


$VERBOSE && echo "Running xsltproc to generate CVE list of CVEs with package update fixes"
CVE_LIST_FIXABLE=$(xsltproc text.xsl $RESULTS | sed /^$/d)
CVE_COUNT_FIXABLE=$(wc -l <<<$CVE_LIST_FIXABLE)
$VERBOSE && echo "$CVE_COUNT_FIXABLE vulnerabilities found that can be fixed with package updates:"
## $VERBOSE && echo $CVE_LIST_FIXABLE

$VERBOSE && echo "Full HTML report availble in $REPORT"
$VERBOSE && echo

if $NAGIOS  ; then
	if [[ -z "$CVE_LIST_ALL" && -z "$CVE_LIST_FIXABLE" ]] ; then
		echo "OK: not vulnerable to any known CVEs"
		exit 0
	elif [ -n "$CVE_LIST_FIXABLE" ] ; then
		echo "CRITICAL: $(wc -l <<<$CVE_LIST_FIXABLE) CVEs can be fixed with package updates"
		echo $CVE_LIST_FIXABLE
		exit 2
	elif [ -n "$CVE_LIST_ALL" ] ; then
		echo "WARNING: $(wc -l <<<$CVE_LIST_ALL) CVEs with no currently avaialble fix"
		echo $CVE_LIST_ALL
		exit 1
	else
		echo "UNKNOWN: something went wrong with $0"
		exit 3
	fi
elif [ -n "$CVE" ]  ; then
	if grep -q "$CVE" <<<$CVE_LIST_ALL ; then
		$SILENT || echo "$CVE vulnerable"
		exit 1
	else
		$SILENT || echo "$CVE not vulnerable"
		exit 0
	fi
elif $ALL ; then
	if [ -n "$CVE_LIST_ALL" ] ; then
		echo "$CVE_LIST_ALL"
		exit 1
	else
		exit 0
	fi
else
	if [ -n "$CVE_LIST_FIXABLE" ] ; then
		echo "$CVE_LIST_FIXABLE"
		exit 1
	else
		exit 0
	fi
fi
		

